use std::{fs, path::Path};

fn main() {
    let base58_str = fs::read_to_string(".launchpad_admin.pubkey")
        .expect("Failed to read .launchpad_admin.pubkey")
        .trim()
        .to_string();

    let decoded = bs58::decode(&base58_str)
        .into_vec()
        .expect("Invalid base58 pubkey");

    if decoded.len() != 32 {
        panic!("Decoded pubkey is not 32 bytes");
    }

    let output = format!(
        r#"// -----------------------------------------------------------------------------
// This file is automatically generated by `build.rs`. Do not edit manually.
// Any changes made here will be overwritten on the next build.
// -----------------------------------------------------------------------------

use anchor_lang::prelude::*;

pub const LAUNCHPAD_ADMIN: Pubkey = Pubkey::from_str_const("{base58}");
"#,
        base58 = base58_str
    );

    let out_path = Path::new("src").join("consts.rs");
    fs::write(out_path, output).expect("Failed to write src/consts.rs");
}

